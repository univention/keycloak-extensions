---
stages:
  - build
  - upload
  - release

workflow:
  rules:
    - if: '$CI_COMMIT_TAG != null'
      variables:
        VERSION_TAG: $CI_COMMIT_TAG
    - if: '$CI_COMMIT_TAG == null'
      variables:
        VERSION_TAG: $CI_COMMIT_SHORT_SHA

variables:
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/reCaptcha-auth-flow/${VERSION_TAG}"
  FILENAME_RECAPTCHA_PLUGIN_THEME: "reCaptcha-theme.tar.gz"
  FILENAME_RECAPTCHA_PLUGIN_JAR: "reCaptcha-auth-flow.jar"
  CI_DEBUG_TRACE: "true"

build_jar:
  stage: build
  trigger:
    strategy: depend
    include:
      - local: "/.gitlab/ci/plugin_pipeline.yml"

build_theme:
  stage: build
  trigger:
    strategy: depend
    include:
      - local: "/.gitlab/ci/theme_pipeline.yml"

# This uploads the built artifacts to the GitLab registry as a generic package.
# Taken from: https://gitlab.com/gitlab-org/release-cli/-/tree/master/docs/examples/release-assets-as-generic-package/
upload:
  stage: upload
  image: "curlimages/curl:latest"
  needs:
    - project: $CI_PROJECT_NAME
      ref: $CI_COMMIT_REF_NAME
      job: "build_theme"
      artifacts: true
    - project: $CI_PROJECT_NAME
      ref: $CI_COMMIT_REF_NAME
      job: "build_jar"
      artifacts: true
  script:
    - ls -la
    - >
      curl
      --header "JOB-TOKEN: ${CI_JOB_TOKEN}"
      --upload-file "$FILENAME_RECAPTCHA_PLUGIN_THEME"
      "$PACKAGE_REGISTRY_URL/$FILENAME_RECAPTCHA_PLUGIN_THEME"
    - >
      curl
      --header "JOB-TOKEN: ${CI_JOB_TOKEN}"
      --upload-file "$FILENAME_RECAPTCHA_PLUGIN_JAR"
      "$PACKAGE_REGISTRY_URL/$FILENAME_RECAPTCHA_PLUGIN_JAR"

# The Release Job is triggered manually.
# This happens in the Gitlab CI pipeline web UI.
release_version_package:
  stage: release
  image: "registry.gitlab.com/gitlab-org/release-cli:latest"
  script:
    - 'echo "Running release job for: $VERSION_TAG"'
  release:
    tag_name: $VERSION_TAG
    name: 'Release $VERSION_TAG'
    description: 'Release created using the release-cli.'
  needs:
    - upload