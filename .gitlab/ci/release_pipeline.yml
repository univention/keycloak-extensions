stages:
  - build
  - upload
  - release

variables:
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/reCaptcha-auth-flow/${VERSION_TAG}"

include:
  - local: "/.gitlab/ci/maven_pipeline.yml"
  - local: "/.gitlab/ci/theme_pipeline.yml"

# This uploads the built artifacts to the GitLab registry as a generic package.
# Taken from: https://gitlab.com/gitlab-org/release-cli/-/tree/master/docs/examples/release-assets-as-generic-package/
upload:
  stage: upload
  image: "curlimages/curl:latest"
  needs:
    - "maven_clean_install"
    - "archive_theme_files"
  script:
    - ls -la
    - >
      curl
      --header "JOB-TOKEN: ${CI_JOB_TOKEN}"
      --upload-file "reCaptcha-theme.tar.gz"
      "$PACKAGE_REGISTRY_URL/reCaptcha-theme.tar.gz"
    - >
      curl
      --header "JOB-TOKEN: ${CI_JOB_TOKEN}"
      --upload-file "reCaptcha-auth-flow.jar"
      "$PACKAGE_REGISTRY_URL/reCaptcha-auth-flow.jar"

# The Release Job is triggered manually.
# This happens in the Gitlab CI pipeline web UI.
release_version_package:
  stage: release
  image: "registry.gitlab.com/gitlab-org/release-cli:latest"
  needs:
    - "retrieve_maven_version"
    - "upload"
  script:
    - 'echo "Running release job for: v$MAVEN_PROJECT_VERSION"'
    - >
      release-cli
      create
      --name "KeyCloak reCaptcha Auth-Flow Plugin ($MAVEN_PROJECT_VERSION)"
      --tag-name "v$MAVEN_PROJECT_VERSION"
      --assets-link "{\"name\":\"reCaptcha-theme.tar.gz\",\"url\":\"${PACKAGE_REGISTRY_URL}/reCaptcha-theme.tar.gz\"}"
      --assets-link "{\"name\":\"reCaptcha-auth-flow.jar\",\"url\":\"${PACKAGE_REGISTRY_URL}/reCaptcha-auth-flow.jar\"}"