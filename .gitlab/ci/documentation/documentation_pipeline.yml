include:
  - project: 'univention/documentation/sphinx-docker'
    file: 'pipeline/sphinx.yml'

stages:
  - build
  - merge
  - deploy

variables:
  # Check the README for more information about the variables:
  # https://git.knut.univention.de/univention/documentation/sphinx-docker/-/blob/main/README.rst
  DOCS_DIR: "docs"
  #   TODO: Move this to use $CI_PROJECT_ID
  DOC_TARGET_NAME: "keycloak-extensions"
  DOC_TARGET_VERSION: "$CI_COMMIT_TAG"
  DOC_TARGET_PATH: "$DOC_TARGET_NAME/$DOC_TARGET_VERSION"

link_check:
  extends: .sphinx-linkcheck-template
  rules:
    - when: always

spelling:
  extends: .sphinx-spelling-template
  rules:
    - when: always

html:
  extends: .sphinx-html-template
  rules:
    - when: always

pdf:
  extends: .sphinx-pdf-template
  rules:
    - when: always

docs_merge:
  extends: .sphinx-merge-template
  needs:
    - job: "html"
      artifacts: true
    - job: "pdf"
      artifacts: true
    - job: "spelling"
      artifacts: false
    - job: "link_check"
      artifacts: false
  rules:
    - when: always

# When GitLab Pages are activated for the repo,
# everything that lands in `public` folder, wil be
# published by an automated GitLab pipeline which publishes
# it within the project.
# See: https://docs.gitlab.com/ee/user/project/pages/
pages:
  stage: deploy
  image: "docker-registry.knut.univention.de/knut/git-sync:latest"
  needs:
    - job: "docs_merge"
      artifacts: true
  script:
    # You probably must adjust this line depending on your desired directory structure.
    - mv out/"$DOC_TARGET_NAME" "public"
  artifacts:
    paths:
      - "public"
    expire_in: 1 week
  environment:
    name: "documentation-${DOC_TARGET_VERSION}"
    url:
  rules:
    - when: always

# This job only runs when it is manually triggered, to always have a human
# contributor doing the deployment of the docs.
# This job pushes to the repository which then link checks and uploads to the online system.
#
# For the deployment to actually go online, one needs to trigger the deployment job in the `docs.univention.de` repository.
# See: https://hutten.knut.univention.de/mediawiki/index.php/Docs/Automated_build_and_deployment
docs_production:
  stage: deploy
  cache:
    key: docs-$CI_COMMIT_REF_SLUG
    paths:
      - univention-docs
  interruptible: false
  variables:
    GIT_STRATEGY: none
    GIT_AUTHOR_NAME: $GITLAB_USER_NAME
    GIT_AUTHOR_EMAIL: $GITLAB_USER_EMAIL
    GIT_COMMITTER_NAME: $GITLAB_USER_NAME
    GIT_COMMITTER_EMAIL: $GITLAB_USER_EMAIL
  needs:
    - job: "docs_merge"
      artifacts: true
  resource_group: prod
  image: $GIT_SYNC
  script:
    - git config --global credential.$CI_SERVER_URL.username ucs-docs-deployment
    - git config --global credential.$CI_SERVER_URL.helper '!f() { [ "$1" = get ] && echo password="$DOCS_TOKEN"; }; f'
    - >
      [ -d univention-docs ] ||
      git clone
      --branch master
      --depth 1
      --single-branch
      $CI_SERVER_URL/univention/docs.univention.de.git
      univention-docs
    - cd univention-docs
    - git clean --force -d
    - git fetch --no-tags origin
    - git reset --hard origin/master
    - rsync -av --delete "$CI_PROJECT_DIR"/out/"$DOC_TARGET_NAME"/ ./"$DOC_TARGET_NAME"/
    - git add -- .
    - git commit -m "Automatic doc deployment from $CI_PROJECT_PATH by GitLab commit $CI_COMMIT_SHA"
    - git push
  rules:
    - when: manual