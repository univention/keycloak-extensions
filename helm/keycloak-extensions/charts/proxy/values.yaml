# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2023 Univention GmbH

---
# Default values for keycloak-bfp-proxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Global values
affinity: {}
environment: {}
fullnameOverride: ""
nameOverride: ""
nodeSelector: {}
podAnnotations: {}
podSecurityContext: {}
replicaCount: 1
securityContext: {}
tolerations: []

# -- Application configuration of the Proxy
appConfig:
  # -- Proxy log level: `debug`, `info`, `warn` or `error`
  logLevel: "debug"
  # -- The Google reCaptcha v2 site key generated from [their admin site](https://www.google.com/recaptcha/admin/)
  captchaSiteKey: "some_site_key"

# -- Global Keycloak Extensions configuration values
global:
  # -- External Keycloak settings
  keycloak:
    # -- Host where keycloak is accessible (specify port if needed)
    host: "sso.example.com"
  # -- PostgreSQL global settings
  postgresql:
    connection:
      # -- Hostname or IP address of the server hosting the PostgreSQL database
      host: "keycloak-extensions-postgresql"
      # -- Port number that the PostgreSQL database is exposed on
      port: "5432"
    auth:
      # -- Database for the proxy and handler to use
      database: "bfp"
      # -- User for the PostgreSQL database
      username: "bfp"
      # -- Password for the PostgreSQL database
      password: "correcthorsebatterystaple"

# -- Kubernetes ingress
ingress:
  # -- Set this to `true` in order to enable the installation on Ingress related objects.
  enabled: true
  ingressClassName: "nginx"
  annotations: {}
  ## define hostname
  # host: "sso.example.com"
  paths:
    - pathType: "Prefix"
      path: "/"
  tls:
    enabled: true
    secretName: ""

## Docker image
image:
  registry: "registry.souvap-univention.de"
  repository: "souvap/tooling/images/keycloak-extensions/keycloak-proxy"
  tag: "0.1.0"
  imagePullPolicy: "Always"

# -- Credentials to fetch images from private registry.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
#
# imagePullSecrets:
#   - "docker-registry"
imagePullSecrets: []

## Container deployment probes
probes:
  liveness:
    enabled: false
    initialDelaySeconds: 120
    timeoutSeconds: 3
    periodSeconds: 30
    failureThreshold: 3
    successThreshold: 1

  readiness:
    enabled: false
    initialDelaySeconds: 30
    timeoutSeconds: 3
    periodSeconds: 15
    failureThreshold: 30
    successThreshold: 1

## Deployment resources
resources:
  requests:
    memory: "512Mi"
    cpu: "250m"
  limits:
    memory: "4Gi"
    cpu: "4"

## Kubernetes service
service:
  enabled: true
  type: "ClusterIP"
  ports:
    http:
      containerPort: 8181
      port: 8181
      protocol: "TCP"

  sessionAffinity:
    enabled: false
    timeoutSeconds: 10800
