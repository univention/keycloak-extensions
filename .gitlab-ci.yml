---
stages:
  - infrastructure
  - provision
  - release

# Handles setup and updates of the environment `production`.
setup_environment_production:
  stage: infrastructure
  trigger:
    include: "/.gitlab/ci/environment/environment_pipeline.yml"
  variables:
    TARGET_ENVIRONMENT: "production"
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'

# Handles provisioning of the environment `production`.
provision_environment_production:
  stage: provision
  trigger:
    include: "/.gitlab/ci/provision/provision_pipeline.yml"
  variables:
    TARGET_ENVIRONMENT: "production"
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'
  needs:
    - "setup_environment_production"

# Handles setup and updates of the environment `staging`.
setup_environment_staging:
  stage: infrastructure
  trigger:
    include: "/.gitlab/ci/environment/environment_pipeline.yml"
  variables:
    TARGET_ENVIRONMENT: "staging"
  rules:
    - if: $CI_COMMIT_BRANCH == 'development'

# Handles provisioning of the environment `staging`.
provision_environment_staging:
  stage: provision
  trigger:
    include: "/.gitlab/ci/provision/provision_pipeline.yml"
  variables:
    TARGET_ENVIRONMENT: "staging"
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'
  needs:
    - "setup_environment_staging"

# Handles setup and updates of the environment for an MR commit, based on the merge request numerical ID.
setup_environment_mr:
  stage: infrastructure
  trigger:
    include: "/.gitlab/ci/environment/environment_pipeline.yml"
  variables:
      TARGET_ENVIRONMENT: "mr-${CI_MERGE_REQUEST_IID}"
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

# Handles provisioning of the environment for an MR commit.
provision_environment_mr:
  stage: provision
  trigger:
    include: "/.gitlab/ci/provision/provision_pipeline.yml"
  variables:
    TARGET_ENVIRONMENT: "mr-${CI_MERGE_REQUEST_IID}"
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  needs:
    - "setup_environment_mr"

# A GitLab Release is done upon semantic version tag push.
release_pipeline:
  stage: release
  trigger:
    include: "/.gitlab/ci/release/release_pipeline.yml"
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+/'

# The Docker images for `proxy` and `handler` are published upon semantic version tag push as well.
docker_pipeline:
  stage: release
  trigger:
    include: "/.gitlab/ci/docker/docker_pipeline.yml"
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+/'
